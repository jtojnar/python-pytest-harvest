<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="0" hostname="fv-az144-442" name="pytest" skipped="0" tests="59" time="6.226" timestamp="2021-03-20T15:09:35.060460"><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_get_session_results.py]" time="0.269" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_saved_fixture_basic.py]" time="0.118" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_saved_fixture_session_module.py]" time="0.099" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_get_session_results_indirect_and_noparam.py]" time="0.100" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_saved_fixture_session.py]" time="0.093" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_saved_fixture_in_global_var.py]" time="0.099" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_saved_fixture_module_params.py]" time="0.116" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_results_bags.py]" time="0.118" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_saved_fixture_in_fixture.py]" time="0.095" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_all_together.py]" time="0.126" /><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" name="test_run_all_tests[test_default_fixtures.py]" time="0.119" /><testcase classname="pytest_harvest.tests.test_doc_basic_dct" name="test_foo[world]" time="0.502" /><testcase classname="pytest_harvest.tests.test_doc_basic_dct" name="test_foo[self]" time="0.402" /><testcase classname="pytest_harvest.tests.test_doc_basic_dct" name="test_synthesis" time="0.005" /><testcase classname="pytest_harvest.tests.test_doc_basic_df" name="test_foo[world]" time="0.502" /><testcase classname="pytest_harvest.tests.test_doc_basic_df" name="test_foo[self]" time="0.402" /><testcase classname="pytest_harvest.tests.test_doc_basic_df" name="test_synthesis" time="0.017" /><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" name="test_foo[0-False]" time="0.504" /><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" name="test_foo[0-True]" time="1.005" /><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" name="test_foo[1-False]" time="0.403" /><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" name="test_foo[1-True]" time="0.804" /><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" name="test_synthesis" time="0.009" /><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" name="test_foo[world]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" name="test_foo[self]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" name="test_synthesis" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" name="test_foo[0]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" name="test_foo[1]" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" name="test_synthesis" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" name="test_foo[0]" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" name="test_foo[1]" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" name="test_synthesis" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_my_app_bench[A-1]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_my_app_bench[A-2]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_my_app_bench[B-1]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_my_app_bench[B-2]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_my_app_bench[C-1]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_my_app_bench[C-2]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_basic" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_example" name="test_synthesis" time="0.006" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_my_app_bench[A-1]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_my_app_bench[A-2]" time="0.003" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_my_app_bench[B-1]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_my_app_bench[B-2]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_my_app_bench[C-1]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_my_app_bench[C-2]" time="0.002" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_basic" time="0.001" /><testcase classname="pytest_harvest.tests.test_doc_example_custom" name="test_synthesis" time="0.008" /><testcase classname="pytest_harvest.tests.test_issue_45" name="test_a[a::0]" time="0.001" /><testcase classname="pytest_harvest.tests.test_issue_45" name="test_b" time="0.001" /><testcase classname="pytest_harvest.tests.test_issue_45.TestC" name="test_c" time="0.001" /><testcase classname="pytest_harvest.tests.test_issue_45.TestC" name="test_d[a::0]" time="0.001" /><testcase classname="pytest_harvest.tests.test_issue_45" name="test_synthesis" time="0.001" /><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" name="test_foo[foo]" time="0.001" /><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" name="test_foo2[foo]" time="0.001" /><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" name="test_foo3[foo]" time="0.002" /><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" name="test_foo3[b]" time="0.002" /><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" name="test_synthesis" time="0.008" /><testcase classname="pytest_harvest.tests.test_results_bag_basic" name="test_results_bag_basic" time="0.001" /><testcase classname="pytest_harvest.tests.test_unicode_literals" name="test_filterset" time="0.002" /></testsuite></testsuites>