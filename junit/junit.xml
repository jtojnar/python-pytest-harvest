<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="0" tests="48" time="6.078"><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_results_bags.py]" time="0.07086920738220215"><system-out>
Testing that running pytest on file test_results_bags.py results in {&apos;skipped&apos;: 0, &apos;failed&apos;: 0, &apos;passed&apos;: 6}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests0, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 6 items

test_run_all_tests.py ......

=========================== 6 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_global_var.py]" time="0.05097079277038574"><system-out>
Testing that running pytest on file test_saved_fixture_in_global_var.py results in {&apos;failed&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests1, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_all_together.py]" time="0.07540154457092285"><system-out>
Testing that running pytest on file test_all_together.py results in {&apos;skipped&apos;: 0, &apos;failed&apos;: 0, &apos;passed&apos;: 9}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests2, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 9 items

test_run_all_tests.py .........

=========================== 9 passed in 0.04 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session.py]" time="0.047515869140625"><system-out>
Testing that running pytest on file test_saved_fixture_session.py results in {&apos;failed&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests3, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_fixture.py]" time="0.0488588809967041"><system-out>
Testing that running pytest on file test_saved_fixture_in_fixture.py results in {&apos;failed&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests4, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_default_fixtures.py]" time="0.06263542175292969"><system-out>
Testing that running pytest on file test_default_fixtures.py results in {&apos;skipped&apos;: 0, &apos;failed&apos;: 0, &apos;passed&apos;: 8}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests5, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 8 items

test_run_all_tests.py ........

=========================== 8 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_basic.py]" time="0.04082489013671875"><system-out>
Testing that running pytest on file test_saved_fixture_basic.py results in {&apos;skipped&apos;: 0, &apos;failed&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests6, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 2 items

test_run_all_tests.py ..

=========================== 2 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session_module.py]" time="0.10732126235961914"><system-out>
Testing that running pytest on file test_saved_fixture_session_module.py results in {&apos;failed&apos;: 0, &apos;passed&apos;: 3}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests7, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 3 items

test_run_all_tests.py ...

=========================== 3 passed in 0.08 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results_indirect_and_noparam.py]" time="0.0442042350769043"><system-out>
Testing that running pytest on file test_get_session_results_indirect_and_noparam.py results in {&apos;skipped&apos;: 0, &apos;failed&apos;: 0, &apos;passed&apos;: 5}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests8, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 5 items

test_run_all_tests.py .....

=========================== 5 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results.py]" time="0.1290445327758789"><system-out>
Testing that running pytest on file test_get_session_results.py results in {&apos;skipped&apos;: 1, &apos;failed&apos;: 1, &apos;passed&apos;: 16}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests9, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 18 items

test_run_all_tests.py ........sF........

=================================== FAILURES ===================================
_________________________________ test_failing _________________________________

    def test_failing():
&gt;       pytest.fail(&quot;normal, intended failure here&quot;)
E       Failed: normal, intended failure here

test_run_all_tests.py:116: Failed
================ 1 failed, 16 passed, 1 skipped in 0.10 seconds ================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_module_params.py]" time="0.05946993827819824"><system-out>
Testing that running pytest on file test_saved_fixture_module_params.py results in {&apos;failed&apos;: 0, &apos;passed&apos;: 7}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.8.0, pluggy-0.3.1
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests10, inifile: 
plugins: logging-2015.11.4, html-1.9.0, harvest-1.7.1, cov-2.6.0
collected 7 items

test_run_all_tests.py .......

=========================== 7 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[world]" time="0.5021364688873291"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[self]" time="0.40209317207336426"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="14" name="test_synthesis" time="0.002230405807495117"><system-out>
   Available `module_results_dct` keys:
    - test_foo[world]
    - test_foo[self]

   Contents of &apos;test_foo[world]&apos;:
    - &apos;pytest_obj&apos;: &lt;function test_foo at 0x7fbc9fa66598&gt;
    - &apos;status&apos;: passed
    - &apos;duration_ms&apos;: 501.1868476867676
    - &apos;status_details&apos;:
      - &apos;teardown&apos;: (&apos;passed&apos;, 0.2167224884033203)
      - &apos;call&apos;: (&apos;passed&apos;, 501.1868476867676)
      - &apos;setup&apos;: (&apos;passed&apos;, 0.7328987121582031)
    - &apos;params&apos;: OrderedDict([(&apos;p&apos;, &apos;world&apos;)])
    - &apos;fixtures&apos;: OrderedDict()
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[world]" time="0.5020339488983154"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[self]" time="0.4019343852996826"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="14" name="test_synthesis" time="0.018289566040039062"><system-out>
   `module_results_df` dataframe:

                                            pytest_obj  ...        p
test_id                                                 ...         
test_foo[world]  &lt;function test_foo at 0x7fbc9fa918c8&gt;  ...    world
test_foo[self]   &lt;function test_foo at 0x7fbc9fa918c8&gt;  ...     self

[2 rows x 4 columns]
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-False]" time="0.5041189193725586"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-True]" time="1.00606369972229"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-False]" time="0.40487122535705566"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-True]" time="0.8047022819519043"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="34" name="test_synthesis" time="0.007910728454589844"><system-out>
   `module_results_df` dataframe:

| test_id           | pytest_obj                            | status   |   duration_ms | double_sleep_time   |   person_param | person   |   nb_letters | current_time               |
|:------------------|:--------------------------------------|:---------|--------------:|:--------------------|---------------:|:---------|-------------:|:---------------------------|
| test_foo[0-False] | &lt;function test_foo at 0x7fbc9fa52ae8&gt; | passed   |       501.127 | False               |              0 | world    |            5 | 2019-08-02T12:31:23.553732 |
| test_foo[0-True]  | &lt;function test_foo at 0x7fbc9fa52ae8&gt; | passed   |      1001.62  | True                |              0 | world    |            5 | 2019-08-02T12:31:24.562532 |
| test_foo[1-False] | &lt;function test_foo at 0x7fbc9fa52ae8&gt; | passed   |       401.027 | False               |              1 | self     |            4 | 2019-08-02T12:31:24.969315 |
| test_foo[1-True]  | &lt;function test_foo at 0x7fbc9fa52ae8&gt; | passed   |       801.468 | True                |              1 | self     |            4 | 2019-08-02T12:31:25.776142 |
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[world]" time="0.002939939498901367"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[self]" time="0.0024983882904052734"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="17" name="test_synthesis" time="0.0013475418090820312"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;results_bag&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2019-08-02T12:31:23.553732
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2019-08-02T12:31:24.562532
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2019-08-02T12:31:24.969315
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2019-08-02T12:31:25.776142
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[world]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2019-08-02T12:31:25.791119
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[self]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2019-08-02T12:31:25.795329
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[0]" time="0.002569913864135742"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[1]" time="0.0031557083129882812"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="24" name="test_synthesis" time="0.0011718273162841797"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;person&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[0]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[1]&apos;: self
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[0]" time="0.002867460250854492"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[1]" time="0.0025968551635742188"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="24" name="test_synthesis" time="0.0017151832580566406"><system-out>
   Available `fixture_store` keys:
    - &apos;person&apos;
    - &apos;results_bag&apos;
    - &apos;other_person_initial&apos;
    - &apos;other_person_last&apos;
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-1]" time="0.004144191741943359"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-2]" time="0.003979921340942383"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-1]" time="0.003332376480102539"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-2]" time="0.003851175308227539"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-1]" time="0.004149675369262695"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-2]" time="0.0035927295684814453"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="36" name="test_basic" time="0.00099945068359375"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="42" name="test_synthesis" time="0.00769805908203125"><system-out>test_id                 pytest_obj                                      status      duration_ms    algo_param  dataset_param      accuracy  dataset
----------------------  ----------------------------------------------  --------  -------------  ------------  ---------------  ----------  -------------
test_my_app_bench[A-1]  &lt;function test_my_app_bench at 0x7fbc9fa588c8&gt;  passed         0.287533             1  A                  0.733555  my dataset #A
test_my_app_bench[A-2]  &lt;function test_my_app_bench at 0x7fbc9fa588c8&gt;  passed         0.329018             2  A                  0.779079  my dataset #A
test_my_app_bench[B-1]  &lt;function test_my_app_bench at 0x7fbc9fa588c8&gt;  passed         0.144243             1  B                  0.522612  my dataset #B
test_my_app_bench[B-2]  &lt;function test_my_app_bench at 0x7fbc9fa588c8&gt;  passed         0.157118             2  B                  0.335818  my dataset #B
test_my_app_bench[C-1]  &lt;function test_my_app_bench at 0x7fbc9fa588c8&gt;  passed         0.147343             1  C                  0.663545  my dataset #C
test_my_app_bench[C-2]  &lt;function test_my_app_bench at 0x7fbc9fa588c8&gt;  passed         0.14925              2  C                  0.945168  my dataset #C
test_basic              &lt;function test_basic at 0x7fbc9fa58a60&gt;         passed         0.273943           nan  nan              nan         nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-1]" time="0.004052400588989258"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-2]" time="0.003969669342041016"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-1]" time="0.003469228744506836"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-2]" time="0.003695964813232422"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-1]" time="0.003789186477661133"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-2]" time="0.0036497116088867188"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="48" name="test_basic" time="0.001058340072631836"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="54" name="test_synthesis" time="0.008870124816894531"><system-out>
Keys:
test_my_app_bench[A-1]
test_my_app_bench[A-2]
test_my_app_bench[B-1]
test_my_app_bench[B-2]
test_my_app_bench[C-1]
test_my_app_bench[C-2]
test_basic

First node:
&apos;pytest_obj&apos;: &lt;function test_my_app_bench at 0x7fbc97120598&gt;
&apos;status&apos;: &apos;passed&apos;
&apos;duration_ms&apos;: 0.15616416931152344
&apos;algo_param&apos;: 1
&apos;dataset_param&apos;: &apos;A&apos;
&apos;dataset&apos;: &apos;my dataset #A&apos;
&apos;accuracy&apos;: 0.16788151143643015
test_id                 status      duration_ms    algo_param  dataset_param    dataset           accuracy
----------------------  --------  -------------  ------------  ---------------  -------------  -----------
test_my_app_bench[A-1]  passed         0.156164             1  A                my dataset #A    0.167882
test_my_app_bench[A-2]  passed         0.322342             2  A                my dataset #A    0.294139
test_my_app_bench[B-1]  passed         0.160456             1  B                my dataset #B    0.166971
test_my_app_bench[B-2]  passed         0.173569             2  B                my dataset #B    0.0518346
test_my_app_bench[C-1]  passed         0.263929             1  C                my dataset #C    0.580967
test_my_app_bench[C-2]  passed         0.156403             2  C                my dataset #C    0.0544497
test_basic              passed         0.263929           nan  nan              nan            nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_results_bag_basic" file="pytest_harvest/tests/test_results_bag_basic.py" line="3" name="test_results_bag_basic" time="0.0014696121215820312"></testcase></testsuite>