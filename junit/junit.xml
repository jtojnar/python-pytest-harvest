<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="0" tests="49" time="5.291"><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_results_bags.py]" time="0.056035518646240234"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests0&apos;)&gt;&apos; that running pytest on file &apos;test_results_bags.py&apos; results in {&apos;failed&apos;: 0, &apos;skipped&apos;: 0, &apos;passed&apos;: 6}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests0, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 6 items

test_run_all_tests.py::test_my_app_bench[A-1] PASSED
test_run_all_tests.py::test_my_app_bench[A-2] PASSED
test_run_all_tests.py::test_my_app_bench[B-1] PASSED
test_run_all_tests.py::test_my_app_bench[B-2] PASSED
test_run_all_tests.py::test_my_app_bench[C-1] PASSED
test_run_all_tests.py::test_my_app_bench[C-2] PASSED

=========================== 6 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_global_var.py]" time="0.039101600646972656"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests1&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_in_global_var.py&apos; results in {&apos;failed&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests1, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 2 items

test_run_all_tests.py::test_foo[0.1272379668650362] PASSED
test_run_all_tests.py::test_foo[0.7862188045389846] PASSED

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_all_together.py]" time="0.05808663368225098"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests2&apos;)&gt;&apos; that running pytest on file &apos;test_all_together.py&apos; results in {&apos;failed&apos;: 0, &apos;skipped&apos;: 0, &apos;passed&apos;: 9}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests2, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 9 items

test_run_all_tests.py::test_complete[A-p=10] PASSED
test_run_all_tests.py::test_complete[A-p=20] PASSED
test_run_all_tests.py::test_complete[B-p=10] PASSED
test_run_all_tests.py::test_complete[B-p=20] PASSED
test_run_all_tests.py::test_complete[C-p=10] PASSED
test_run_all_tests.py::test_complete[C-p=20] PASSED
test_run_all_tests.py::test_synthesis[False-None] PASSED
test_run_all_tests.py::test_synthesis[True-None] PASSED
test_run_all_tests.py::test_synthesis[True-my_results] PASSED

=========================== 9 passed in 0.04 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session.py]" time="0.038126468658447266"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests3&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_session.py&apos; results in {&apos;failed&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests3, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 2 items

test_run_all_tests.py::test_foo[0.4903106054269655] PASSED
test_run_all_tests.py::test_foo[0.6668926471994941] PASSED

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_fixture.py]" time="0.038099050521850586"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests4&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_in_fixture.py&apos; results in {&apos;failed&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests4, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 2 items

test_run_all_tests.py::test_foo[0.6055907995161134] PASSED
test_run_all_tests.py::test_foo[0.15369711984185863] PASSED

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_default_fixtures.py]" time="0.04697847366333008"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests5&apos;)&gt;&apos; that running pytest on file &apos;test_default_fixtures.py&apos; results in {&apos;failed&apos;: 0, &apos;skipped&apos;: 0, &apos;passed&apos;: 8}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests5, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 8 items

test_run_all_tests.py::test_foo[1-hello] PASSED
test_run_all_tests.py::test_foo[1-world] PASSED
test_run_all_tests.py::test_foo[2-hello] PASSED
test_run_all_tests.py::test_foo[2-world] PASSED
test_run_all_tests.py::test_synthesis_default_module_dct PASSED
test_run_all_tests.py::test_synthesis_default_module_df PASSED
test_run_all_tests.py::test_synthesis_default_session_dct PASSED
test_run_all_tests.py::test_synthesis_default_session_df PASSED

=========================== 8 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_basic.py]" time="0.06320476531982422"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests6&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_basic.py&apos; results in {&apos;failed&apos;: 0, &apos;skipped&apos;: 0, &apos;passed&apos;: 2}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests6, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 2 items

test_run_all_tests.py::test_dummy PASSED
test_run_all_tests.py::test_synthesis PASSED

=========================== 2 passed in 0.04 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session_module.py]" time="0.03637886047363281"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests7&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_session_module.py&apos; results in {&apos;failed&apos;: 0, &apos;passed&apos;: 3}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests7, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 3 items

test_run_all_tests.py::test_foo PASSED
test_run_all_tests.py::test_bar PASSED
test_run_all_tests.py::test_synthesis PASSED

=========================== 3 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results_indirect_and_noparam.py]" time="0.0355224609375"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests8&apos;)&gt;&apos; that running pytest on file &apos;test_get_session_results_indirect_and_noparam.py&apos; results in {&apos;failed&apos;: 0, &apos;skipped&apos;: 0, &apos;passed&apos;: 5}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests8, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 5 items

test_run_all_tests.py::test_foo[1] PASSED
test_run_all_tests.py::test_foo[2] PASSED
test_run_all_tests.py::test_get_all_pytest_fixture_names_indirect PASSED
test_run_all_tests.py::test_foo2 PASSED
test_run_all_tests.py::test_get_all_pytest_fixture_names_no_param PASSED

=========================== 5 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results.py]" time="0.0863804817199707"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests9&apos;)&gt;&apos; that running pytest on file &apos;test_get_session_results.py&apos; results in {&apos;failed&apos;: 1, &apos;skipped&apos;: 1, &apos;passed&apos;: 17}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests9, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 19 items

test_run_all_tests.py::test_run_all_tests.doctestable PASSED
test_run_all_tests.py::test_foo[1-hello] PASSED
test_run_all_tests.py::test_foo[1-world] PASSED
test_run_all_tests.py::test_foo[2-hello] PASSED
test_run_all_tests.py::test_foo[2-world] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=False-flatten=False] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=False-flatten=True] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=True-flatten=False] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=True-flatten=True] PASSED
test_run_all_tests.py::test_skipped SKIPPED
test_run_all_tests.py::test_failing FAILED
test_run_all_tests.py::test_synthesis_skipped PASSED
test_run_all_tests.py::test_synthesis_failed PASSED
test_run_all_tests.py::TestX::test_easy[True] PASSED
test_run_all_tests.py::TestX::test_easy[False] PASSED
test_run_all_tests.py::test_synthesis_id_formatting PASSED
test_run_all_tests.py::test_get_all_pytest_param_names PASSED
test_run_all_tests.py::test_get_all_pytest_fixture_names PASSED
test_run_all_tests.py::test_synthesis_contains_everything PASSED

=================================== FAILURES ===================================
_________________________________ test_failing _________________________________

    def test_failing():
&gt;       pytest.fail(&quot;normal, intended failure here&quot;)
E       Failed: normal, intended failure here

test_run_all_tests.py:116: Failed
================ 1 failed, 17 passed, 1 skipped in 0.07 seconds ================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_module_params.py]" time="0.04428243637084961"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests10&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_module_params.py&apos; results in {&apos;failed&apos;: 0, &apos;passed&apos;: 7}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests10, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.9.3
collecting ... collected 7 items

test_run_all_tests.py::test_foo[1] PASSED
test_run_all_tests.py::test_bar[1-a] PASSED
test_run_all_tests.py::test_bar[2-a] PASSED
test_run_all_tests.py::test_foo[2] PASSED
test_run_all_tests.py::test_bar[2-b] PASSED
test_run_all_tests.py::test_bar[1-b] PASSED
test_run_all_tests.py::test_synthesis PASSED

=========================== 7 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[world]" time="0.5015139579772949"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[self]" time="0.40153956413269043"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="14" name="test_synthesis" time="0.001631021499633789"><system-out>
   Available `module_results_dct` keys:
    - test_foo[world]
    - test_foo[self]

   Contents of &apos;test_foo[world]&apos;:
    - &apos;pytest_obj&apos;: &lt;function test_foo at 0x7f3718419ea0&gt;
    - &apos;status&apos;: passed
    - &apos;duration_ms&apos;: 500.9317398071289
    - &apos;status_details&apos;:
      - &apos;setup&apos;: (&apos;passed&apos;, 0.3726482391357422)
      - &apos;call&apos;: (&apos;passed&apos;, 500.9317398071289)
      - &apos;teardown&apos;: (&apos;passed&apos;, 0.20956993103027344)
    - &apos;params&apos;: OrderedDict([(&apos;p&apos;, &apos;world&apos;)])
    - &apos;fixtures&apos;: OrderedDict()
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[world]" time="0.5020005702972412"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[self]" time="0.4016423225402832"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="14" name="test_synthesis" time="0.01366567611694336"><system-out>
   `module_results_df` dataframe:

                                            pytest_obj  ...        p
test_id                                                 ...         
test_foo[world]  &lt;function test_foo at 0x7f3718463ae8&gt;  ...    world
test_foo[self]   &lt;function test_foo at 0x7f3718463ae8&gt;  ...     self

[2 rows x 4 columns]
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-False]" time="0.5030229091644287"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-True]" time="1.003509283065796"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-False]" time="0.40293097496032715"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-True]" time="0.8038039207458496"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="34" name="test_synthesis" time="0.007995128631591797"><system-out>
   `module_results_df` dataframe:

| test_id           | pytest_obj                            | status   |   duration_ms | double_sleep_time   |   person_param | person   | current_time               |   nb_letters |
|:------------------|:--------------------------------------|:---------|--------------:|:--------------------|---------------:|:---------|:---------------------------|-------------:|
| test_foo[0-False] | &lt;function test_foo at 0x7f37183d3268&gt; | passed   |       500.912 | False               |              0 | world    | 2020-09-18T20:38:41.239176 |            5 |
| test_foo[0-True]  | &lt;function test_foo at 0x7f37183d3268&gt; | passed   |      1001.39  | True                |              0 | world    | 2020-09-18T20:38:42.244097 |            5 |
| test_foo[1-False] | &lt;function test_foo at 0x7f37183d3268&gt; | passed   |       400.869 | False               |              1 | self     | 2020-09-18T20:38:42.648506 |            4 |
| test_foo[1-True]  | &lt;function test_foo at 0x7f37183d3268&gt; | passed   |       801.279 | True                |              1 | self     | 2020-09-18T20:38:43.453413 |            4 |
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[world]" time="0.002245664596557617"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[self]" time="0.0021190643310546875"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="17" name="test_synthesis" time="0.001129150390625"><system-out>
   Available `fixture_store` keys:
    - &apos;dummy&apos;
    - &apos;my_fix&apos;
    - &apos;my_fix2&apos;
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;results_bag&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;:
      - &apos;current_time&apos;: 2020-09-18T20:38:41.239176
      - &apos;nb_letters&apos;: 5
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;:
      - &apos;current_time&apos;: 2020-09-18T20:38:42.244097
      - &apos;nb_letters&apos;: 5
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;:
      - &apos;current_time&apos;: 2020-09-18T20:38:42.648506
      - &apos;nb_letters&apos;: 4
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;:
      - &apos;current_time&apos;: 2020-09-18T20:38:43.453413
      - &apos;nb_letters&apos;: 4
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[world]&apos;:
      - &apos;current_time&apos;: 2020-09-18T20:38:43.468057
      - &apos;nb_letters&apos;: 5
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[self]&apos;:
      - &apos;current_time&apos;: 2020-09-18T20:38:43.471639
      - &apos;nb_letters&apos;: 4
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[0]" time="0.0019054412841796875"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[1]" time="0.0018854141235351562"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="24" name="test_synthesis" time="0.0009512901306152344"><system-out>
   Available `fixture_store` keys:
    - &apos;dummy&apos;
    - &apos;my_fix&apos;
    - &apos;my_fix2&apos;
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;person&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[0]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[1]&apos;: self
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[0]" time="0.0019080638885498047"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[1]" time="0.002181529998779297"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="24" name="test_synthesis" time="0.0008265972137451172"><system-out>
   Available `fixture_store` keys:
    - &apos;dummy&apos;
    - &apos;my_fix&apos;
    - &apos;my_fix2&apos;
    - &apos;person&apos;
    - &apos;results_bag&apos;
    - &apos;other_person_last&apos;
    - &apos;other_person_initial&apos;
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-1]" time="0.002920866012573242"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-2]" time="0.002756834030151367"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-1]" time="0.0030503273010253906"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-2]" time="0.0027179718017578125"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-1]" time="0.0027239322662353516"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-2]" time="0.0028228759765625"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="36" name="test_basic" time="0.0006022453308105469"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="42" name="test_synthesis" time="0.008212804794311523"><system-out>test_id                 pytest_obj                                      status      duration_ms    algo_param  dataset_param      accuracy  dataset
----------------------  ----------------------------------------------  --------  -------------  ------------  ---------------  ----------  -------------
test_my_app_bench[A-1]  &lt;function test_my_app_bench at 0x7f37183ef0d0&gt;  passed         0.167131             1  A                  0.891125  my dataset #A
test_my_app_bench[A-2]  &lt;function test_my_app_bench at 0x7f37183ef0d0&gt;  passed         0.151873             2  A                  0.677523  my dataset #A
test_my_app_bench[B-1]  &lt;function test_my_app_bench at 0x7f37183ef0d0&gt;  passed         0.153065             1  B                  0.766635  my dataset #B
test_my_app_bench[B-2]  &lt;function test_my_app_bench at 0x7f37183ef0d0&gt;  passed         0.155449             2  B                  0.948504  my dataset #B
test_my_app_bench[C-1]  &lt;function test_my_app_bench at 0x7f37183ef0d0&gt;  passed         0.159264             1  C                  0.394293  my dataset #C
test_my_app_bench[C-2]  &lt;function test_my_app_bench at 0x7f37183ef0d0&gt;  passed         0.165939             2  C                  0.392275  my dataset #C
test_basic              &lt;function test_basic at 0x7f37183ef1e0&gt;         passed         0.145912           nan  nan              nan         nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-1]" time="0.0030670166015625"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-2]" time="0.002814769744873047"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-1]" time="0.002802610397338867"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-2]" time="0.002735137939453125"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-1]" time="0.0027229785919189453"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-2]" time="0.0027098655700683594"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="48" name="test_basic" time="0.0006265640258789062"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="54" name="test_synthesis" time="0.009642362594604492"><system-out>
Keys:
test_my_app_bench[A-1]
test_my_app_bench[A-2]
test_my_app_bench[B-1]
test_my_app_bench[B-2]
test_my_app_bench[C-1]
test_my_app_bench[C-2]
test_basic

First node:
&apos;pytest_obj&apos;: &lt;function test_my_app_bench at 0x7f37183d3d90&gt;
&apos;status&apos;: &apos;passed&apos;
&apos;duration_ms&apos;: 0.18978118896484375
&apos;algo_param&apos;: 1
&apos;dataset_param&apos;: &apos;A&apos;
&apos;dataset&apos;: &apos;my dataset #A&apos;
&apos;accuracy&apos;: 0.6602048328288951
test_id                 status      duration_ms    algo_param  dataset_param    dataset          accuracy
----------------------  --------  -------------  ------------  ---------------  -------------  ----------
test_my_app_bench[A-1]  passed         0.189781             1  A                my dataset #A    0.660205
test_my_app_bench[A-2]  passed         0.171661             2  A                my dataset #A    0.908308
test_my_app_bench[B-1]  passed         0.159264             1  B                my dataset #B    0.386693
test_my_app_bench[B-2]  passed         0.155449             2  B                my dataset #B    0.468891
test_my_app_bench[C-1]  passed         0.160456             1  C                my dataset #C    0.287293
test_my_app_bench[C-2]  passed         0.154972             2  C                my dataset #C    0.4415
test_basic              passed         0.153065           nan  nan              nan            nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_results_bag_basic" file="pytest_harvest/tests/test_results_bag_basic.py" line="3" name="test_results_bag_basic" time="0.0007297992706298828"></testcase><testcase classname="pytest_harvest.tests.test_unicode_literals" file="pytest_harvest/tests/test_unicode_literals.py" line="4" name="test_filterset" time="0.0008418560028076172"></testcase></testsuite>