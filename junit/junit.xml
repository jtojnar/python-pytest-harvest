<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="0" tests="59" time="5.350"><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_results_bags.py]" time="0.057210683822631836"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests0&apos;)&gt;&apos; that running pytest on file &apos;test_results_bags.py&apos; results in {&apos;skipped&apos;: 0, &apos;passed&apos;: 6, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests0, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 6 items

test_run_all_tests.py::test_my_app_bench[A-1] PASSED
test_run_all_tests.py::test_my_app_bench[A-2] PASSED
test_run_all_tests.py::test_my_app_bench[B-1] PASSED
test_run_all_tests.py::test_my_app_bench[B-2] PASSED
test_run_all_tests.py::test_my_app_bench[C-1] PASSED
test_run_all_tests.py::test_my_app_bench[C-2] PASSED

=========================== 6 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_global_var.py]" time="0.03951406478881836"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests1&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_in_global_var.py&apos; results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests1, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 2 items

test_run_all_tests.py::test_foo[0.5291409899476001] PASSED
test_run_all_tests.py::test_foo[0.6641278053681591] PASSED

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_all_together.py]" time="0.05870389938354492"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests2&apos;)&gt;&apos; that running pytest on file &apos;test_all_together.py&apos; results in {&apos;skipped&apos;: 0, &apos;passed&apos;: 9, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests2, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 9 items

test_run_all_tests.py::test_complete[A-p=10] PASSED
test_run_all_tests.py::test_complete[A-p=20] PASSED
test_run_all_tests.py::test_complete[B-p=10] PASSED
test_run_all_tests.py::test_complete[B-p=20] PASSED
test_run_all_tests.py::test_complete[C-p=10] PASSED
test_run_all_tests.py::test_complete[C-p=20] PASSED
test_run_all_tests.py::test_synthesis[False-None] PASSED
test_run_all_tests.py::test_synthesis[True-None] PASSED
test_run_all_tests.py::test_synthesis[True-my_results] PASSED

=========================== 9 passed in 0.04 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session.py]" time="0.03874707221984863"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests3&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_session.py&apos; results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests3, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 2 items

test_run_all_tests.py::test_foo[0.629147449328405] PASSED
test_run_all_tests.py::test_foo[0.8743058491203449] PASSED

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_in_fixture.py]" time="0.03773069381713867"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests4&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_in_fixture.py&apos; results in {&apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests4, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 2 items

test_run_all_tests.py::test_foo[0.7199967942278789] PASSED
test_run_all_tests.py::test_foo[0.023736692154451733] PASSED

=========================== 2 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_default_fixtures.py]" time="0.0823674201965332"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests5&apos;)&gt;&apos; that running pytest on file &apos;test_default_fixtures.py&apos; results in {&apos;skipped&apos;: 0, &apos;passed&apos;: 8, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests5, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 8 items

test_run_all_tests.py::test_foo[1-hello] PASSED
test_run_all_tests.py::test_foo[1-world] PASSED
test_run_all_tests.py::test_foo[2-hello] PASSED
test_run_all_tests.py::test_foo[2-world] PASSED
test_run_all_tests.py::test_synthesis_default_module_dct PASSED
test_run_all_tests.py::test_synthesis_default_module_df PASSED
test_run_all_tests.py::test_synthesis_default_session_dct PASSED
test_run_all_tests.py::test_synthesis_default_session_df PASSED

=========================== 8 passed in 0.03 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_basic.py]" time="0.03408217430114746"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests6&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_basic.py&apos; results in {&apos;skipped&apos;: 0, &apos;passed&apos;: 2, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests6, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 2 items

test_run_all_tests.py::test_dummy PASSED
test_run_all_tests.py::test_synthesis PASSED

=========================== 2 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_session_module.py]" time="0.03739333152770996"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests7&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_session_module.py&apos; results in {&apos;passed&apos;: 3, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests7, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 3 items

test_run_all_tests.py::test_foo PASSED
test_run_all_tests.py::test_bar PASSED
test_run_all_tests.py::test_synthesis PASSED

=========================== 3 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results_indirect_and_noparam.py]" time="0.03694915771484375"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests8&apos;)&gt;&apos; that running pytest on file &apos;test_get_session_results_indirect_and_noparam.py&apos; results in {&apos;skipped&apos;: 0, &apos;passed&apos;: 5, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests8, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 5 items

test_run_all_tests.py::test_foo[1] PASSED
test_run_all_tests.py::test_foo[2] PASSED
test_run_all_tests.py::test_get_all_pytest_fixture_names_indirect PASSED
test_run_all_tests.py::test_foo2 PASSED
test_run_all_tests.py::test_get_all_pytest_fixture_names_no_param PASSED

=========================== 5 passed in 0.01 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_get_session_results.py]" time="0.0910501480102539"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests9&apos;)&gt;&apos; that running pytest on file &apos;test_get_session_results.py&apos; results in {&apos;skipped&apos;: 1, &apos;passed&apos;: 17, &apos;failed&apos;: 1}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests9, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 19 items

test_run_all_tests.py::test_run_all_tests.doctestable PASSED
test_run_all_tests.py::test_foo[1-hello] PASSED
test_run_all_tests.py::test_foo[1-world] PASSED
test_run_all_tests.py::test_foo[2-hello] PASSED
test_run_all_tests.py::test_foo[2-world] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=False-flatten=False] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=False-flatten=True] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=True-flatten=False] PASSED
test_run_all_tests.py::test_foo_synthesis_all_options[duration_in_ms=True-flatten=True] PASSED
test_run_all_tests.py::test_skipped SKIPPED
test_run_all_tests.py::test_failing FAILED
test_run_all_tests.py::test_synthesis_skipped PASSED
test_run_all_tests.py::test_synthesis_failed PASSED
test_run_all_tests.py::TestX::test_easy[True] PASSED
test_run_all_tests.py::TestX::test_easy[False] PASSED
test_run_all_tests.py::test_synthesis_id_formatting PASSED
test_run_all_tests.py::test_get_all_pytest_param_names PASSED
test_run_all_tests.py::test_get_all_pytest_fixture_names PASSED
test_run_all_tests.py::test_synthesis_contains_everything PASSED

=================================== FAILURES ===================================
_________________________________ test_failing _________________________________

    def test_failing():
&gt;       pytest.fail(&quot;normal, intended failure here&quot;)
E       Failed: normal, intended failure here

test_run_all_tests.py:116: Failed
================ 1 failed, 17 passed, 1 skipped in 0.07 seconds ================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_all_raw_with_meta_check" file="pytest_harvest/tests/test_all_raw_with_meta_check.py" line="21" name="test_run_all_tests[test_saved_fixture_module_params.py]" time="0.04492449760437012"><system-out>
Testing in tmp folder &apos;&lt;Testdir local(&apos;/tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests10&apos;)&gt;&apos; that running pytest on file &apos;test_saved_fixture_module_params.py&apos; results in {&apos;passed&apos;: 7, &apos;failed&apos;: 0}
============================= test session starts ==============================
platform linux -- Python 3.5.6, pytest-2.9.2, py-1.9.0, pluggy-0.3.1 -- /home/travis/miniconda/envs/test-environment/bin/python
cachedir: .cache
rootdir: /tmp/pytest-of-travis/pytest-0/testdir/test_run_all_tests10, inifile: pytest.ini
plugins: logging-2015.11.4, html-1.9.0, harvest-1.10.1.dev3+g86a259b, cases-2.7.2
collecting ... collected 7 items

test_run_all_tests.py::test_foo[1] PASSED
test_run_all_tests.py::test_bar[1-a] PASSED
test_run_all_tests.py::test_bar[2-a] PASSED
test_run_all_tests.py::test_foo[2] PASSED
test_run_all_tests.py::test_bar[2-b] PASSED
test_run_all_tests.py::test_bar[1-b] PASSED
test_run_all_tests.py::test_synthesis PASSED

=========================== 7 passed in 0.02 seconds ===========================
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[world]" time="0.5018794536590576"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="5" name="test_foo[self]" time="0.40198254585266113"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_dct" file="pytest_harvest/tests/test_doc_basic_dct.py" line="14" name="test_synthesis" time="0.0024144649505615234"><system-out>
   Available `module_results_dct` keys:
    - test_foo[world]
    - test_foo[self]

   Contents of &apos;test_foo[world]&apos;:
    - &apos;pytest_obj&apos;: &lt;function test_foo at 0x7f3dc9489ea0&gt;
    - &apos;status&apos;: passed
    - &apos;duration_ms&apos;: 500.92196464538574
    - &apos;status_details&apos;:
      - &apos;call&apos;: (&apos;passed&apos;, 500.92196464538574)
      - &apos;teardown&apos;: (&apos;passed&apos;, 0.3643035888671875)
      - &apos;setup&apos;: (&apos;passed&apos;, 0.5931854248046875)
    - &apos;params&apos;: OrderedDict([(&apos;p&apos;, &apos;world&apos;)])
    - &apos;fixtures&apos;: OrderedDict()
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[world]" time="0.5023620128631592"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="5" name="test_foo[self]" time="0.4016728401184082"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df" file="pytest_harvest/tests/test_doc_basic_df.py" line="14" name="test_synthesis" time="0.012990951538085938"><system-out>
   `module_results_df` dataframe:

                                            pytest_obj  ...        p
test_id                                                 ...         
test_foo[world]  &lt;function test_foo at 0x7f3dc94529d8&gt;  ...    world
test_foo[self]   &lt;function test_foo at 0x7f3dc94529d8&gt;  ...     self

[2 rows x 4 columns]
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-False]" time="0.5034825801849365"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[0-True]" time="1.0043377876281738"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-False]" time="0.40380263328552246"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="21" name="test_foo[1-True]" time="0.8040001392364502"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_df_all" file="pytest_harvest/tests/test_doc_basic_df_all.py" line="34" name="test_synthesis" time="0.00601506233215332"><system-out>
   `module_results_df` dataframe:

| test_id           | pytest_obj                            | status   |   duration_ms | double_sleep_time   |   person_param | person   |   nb_letters | current_time               |
|:------------------|:--------------------------------------|:---------|--------------:|:--------------------|---------------:|:---------|-------------:|:---------------------------|
| test_foo[0-False] | &lt;function test_foo at 0x7f3dc9448268&gt; | passed   |       500.909 | False               |              0 | world    |            5 | 2020-12-08T22:59:10.499953 |
| test_foo[0-True]  | &lt;function test_foo at 0x7f3dc9448268&gt; | passed   |      1001.41  | True                |              0 | world    |            5 | 2020-12-08T22:59:11.505648 |
| test_foo[1-False] | &lt;function test_foo at 0x7f3dc9448268&gt; | passed   |       400.811 | False               |              1 | self     |            4 | 2020-12-08T22:59:11.910756 |
| test_foo[1-True]  | &lt;function test_foo at 0x7f3dc9448268&gt; | passed   |       801.268 | True                |              1 | self     |            4 | 2020-12-08T22:59:12.716094 |
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[world]" time="0.0022020339965820312"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="5" name="test_foo[self]" time="0.002104520797729492"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_results_bag" file="pytest_harvest/tests/test_doc_basic_results_bag.py" line="17" name="test_synthesis" time="0.001092672348022461"><system-out>
   Available `fixture_store` keys:
    - &apos;dummy&apos;
    - &apos;my_fix&apos;
    - &apos;my_fix2&apos;
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;results_bag&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2020-12-08T22:59:10.499953
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2020-12-08T22:59:11.505648
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2020-12-08T22:59:11.910756
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2020-12-08T22:59:12.716094
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[world]&apos;:
      - &apos;nb_letters&apos;: 5
      - &apos;current_time&apos;: 2020-12-08T22:59:12.727707
    - &apos;pytest_harvest/tests/test_doc_basic_results_bag.py::test_foo[self]&apos;:
      - &apos;nb_letters&apos;: 4
      - &apos;current_time&apos;: 2020-12-08T22:59:12.730934
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[0]" time="0.002026081085205078"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="17" name="test_foo[1]" time="0.002117156982421875"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture" file="pytest_harvest/tests/test_doc_basic_saved_fixture.py" line="24" name="test_synthesis" time="0.0010867118835449219"><system-out>
   Available `fixture_store` keys:
    - &apos;dummy&apos;
    - &apos;my_fix&apos;
    - &apos;my_fix2&apos;
    - &apos;person&apos;
    - &apos;results_bag&apos;

   Contents of `fixture_store[&apos;person&apos;]`:
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-False]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[0-True]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-False]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_df_all.py::test_foo[1-True]&apos;: self
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[0]&apos;: world
    - &apos;pytest_harvest/tests/test_doc_basic_saved_fixture.py::test_foo[1]&apos;: self
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[0]" time="0.0019495487213134766"><system-out>
   hello, world !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="17" name="test_foo[1]" time="0.0021741390228271484"><system-out>
   hello, self !
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_basic_saved_fixture_views" file="pytest_harvest/tests/test_doc_basic_saved_fixture_views.py" line="24" name="test_synthesis" time="0.0008363723754882812"><system-out>
   Available `fixture_store` keys:
    - &apos;dummy&apos;
    - &apos;my_fix&apos;
    - &apos;my_fix2&apos;
    - &apos;person&apos;
    - &apos;results_bag&apos;
    - &apos;other_person_last&apos;
    - &apos;other_person_initial&apos;
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-1]" time="0.0029239654541015625"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[A-2]" time="0.002515554428100586"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-1]" time="0.0026662349700927734"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[B-2]" time="0.002507448196411133"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-1]" time="0.0025873184204101562"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="22" name="test_my_app_bench[C-2]" time="0.0025806427001953125"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="36" name="test_basic" time="0.0006246566772460938"></testcase><testcase classname="pytest_harvest.tests.test_doc_example" file="pytest_harvest/tests/test_doc_example.py" line="42" name="test_synthesis" time="0.0057718753814697266"><system-out>test_id                 pytest_obj                                      status      duration_ms    algo_param  dataset_param      accuracy  dataset
----------------------  ----------------------------------------------  --------  -------------  ------------  ---------------  ----------  -------------
test_my_app_bench[A-1]  &lt;function test_my_app_bench at 0x7f3dc93e10d0&gt;  passed        0.156403              1  A                  0.702455  my dataset #A
test_my_app_bench[A-2]  &lt;function test_my_app_bench at 0x7f3dc93e10d0&gt;  passed        0.0846386             2  A                  0.499431  my dataset #A
test_my_app_bench[B-1]  &lt;function test_my_app_bench at 0x7f3dc93e10d0&gt;  passed        0.0789165             1  B                  0.377145  my dataset #B
test_my_app_bench[B-2]  &lt;function test_my_app_bench at 0x7f3dc93e10d0&gt;  passed        0.0793934             2  B                  0.641935  my dataset #B
test_my_app_bench[C-1]  &lt;function test_my_app_bench at 0x7f3dc93e10d0&gt;  passed        0.0798702             1  C                  0.597371  my dataset #C
test_my_app_bench[C-2]  &lt;function test_my_app_bench at 0x7f3dc93e10d0&gt;  passed        0.082016              2  C                  0.460444  my dataset #C
test_basic              &lt;function test_basic at 0x7f3dc93e11e0&gt;         passed        0.146866            nan  nan              nan         nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-1]" time="0.0026502609252929688"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[A-2]" time="0.002701282501220703"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-1]" time="0.0025620460510253906"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[B-2]" time="0.003292083740234375"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-1]" time="0.002646923065185547"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="34" name="test_my_app_bench[C-2]" time="0.0025725364685058594"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="48" name="test_basic" time="0.0006995201110839844"></testcase><testcase classname="pytest_harvest.tests.test_doc_example_custom" file="pytest_harvest/tests/test_doc_example_custom.py" line="54" name="test_synthesis" time="0.006899833679199219"><system-out>
Keys:
test_my_app_bench[A-1]
test_my_app_bench[A-2]
test_my_app_bench[B-1]
test_my_app_bench[B-2]
test_my_app_bench[C-1]
test_my_app_bench[C-2]
test_basic

First node:
&apos;pytest_obj&apos;: &lt;function test_my_app_bench at 0x7f3dc9448d90&gt;
&apos;status&apos;: &apos;passed&apos;
&apos;duration_ms&apos;: 0.08296966552734375
&apos;algo_param&apos;: 1
&apos;dataset_param&apos;: &apos;A&apos;
&apos;dataset&apos;: &apos;my dataset #A&apos;
&apos;accuracy&apos;: 0.8001623785093301
test_id                 status      duration_ms    algo_param  dataset_param    dataset           accuracy
----------------------  --------  -------------  ------------  ---------------  -------------  -----------
test_my_app_bench[A-1]  passed        0.0829697             1  A                my dataset #A    0.800162
test_my_app_bench[A-2]  passed        0.0925064             2  A                my dataset #A    0.841213
test_my_app_bench[B-1]  passed        0.0815392             1  B                my dataset #B    0.401681
test_my_app_bench[B-2]  passed        0.0779629             2  B                my dataset #B    0.464941
test_my_app_bench[C-1]  passed        0.164509              1  C                my dataset #C    0.0981263
test_my_app_bench[C-2]  passed        0.0805855             2  C                my dataset #C    0.957261
test_basic              passed        0.165224            nan  nan              nan            nan
</system-out></testcase><testcase classname="pytest_harvest.tests.test_issue_45" file="pytest_harvest/tests/test_issue_45.py" line="3" name="test_a[a::0]" time="0.0008022785186767578"></testcase><testcase classname="pytest_harvest.tests.test_issue_45" file="pytest_harvest/tests/test_issue_45.py" line="8" name="test_b" time="0.0006248950958251953"></testcase><testcase classname="pytest_harvest.tests.test_issue_45.TestC" file="pytest_harvest/tests/test_issue_45.py" line="13" name="test_c" time="0.0006349086761474609"></testcase><testcase classname="pytest_harvest.tests.test_issue_45.TestC" file="pytest_harvest/tests/test_issue_45.py" line="16" name="test_d[a::0]" time="0.0007832050323486328"></testcase><testcase classname="pytest_harvest.tests.test_issue_45" file="pytest_harvest/tests/test_issue_45.py" line="21" name="test_synthesis" time="0.0018482208251953125"></testcase><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" file="pytest_harvest/tests/test_lazy_and_harvest.py" line="20" name="test_foo[foo]" time="0.0007548332214355469"></testcase><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" file="pytest_harvest/tests/test_lazy_and_harvest.py" line="28" name="test_foo2[foo[0]-foo[1]]" time="0.0008571147918701172"></testcase><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" file="pytest_harvest/tests/test_lazy_and_harvest.py" line="36" name="test_foo3[a_is_foo]" time="0.0023031234741210938"></testcase><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" file="pytest_harvest/tests/test_lazy_and_harvest.py" line="36" name="test_foo3[a_is_b]" time="0.0021572113037109375"></testcase><testcase classname="pytest_harvest.tests.test_lazy_and_harvest" file="pytest_harvest/tests/test_lazy_and_harvest.py" line="48" name="test_synthesis" time="0.007009267807006836"></testcase><testcase classname="pytest_harvest.tests.test_results_bag_basic" file="pytest_harvest/tests/test_results_bag_basic.py" line="3" name="test_results_bag_basic" time="0.0007503032684326172"></testcase><testcase classname="pytest_harvest.tests.test_unicode_literals" file="pytest_harvest/tests/test_unicode_literals.py" line="4" name="test_filterset" time="0.0009701251983642578"></testcase></testsuite>